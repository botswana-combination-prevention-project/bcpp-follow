"""
Django settings for bcpp_follow project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os
import sys
from pathlib import PurePath
import configparser

from django.core.management.color import color_style

style = color_style()

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

APP_NAME = 'bcpp_follow'
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'rg_bhpa2503_4^t@901nfvfg490ir(@gn@l$&p1!&(*=-7y3k0'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CONFIG_FILE = 'bcpp_follow.conf'

ALLOWED_HOSTS = []

if DEBUG:
    ETC_DIR = '/etc'
else:
    ETC_DIR = '/etc'


CONFIG_PATH = os.path.join(ETC_DIR, APP_NAME, CONFIG_FILE)
sys.stdout.write(style.SUCCESS(f'Config folder {ETC_DIR}\n'))
sys.stdout.write(style.SUCCESS(f'  * Reading config from {CONFIG_FILE}\n'))

config = configparser.RawConfigParser()
config.read(os.path.join(CONFIG_PATH))

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_crypto_fields.apps.AppConfig',
    'django_revision.apps.AppConfig',
    'rest_framework.authtoken',
    'edc_base.apps.AppConfig',
    'edc_consent.apps.AppConfig',
    'edc_lab.apps.AppConfig',
    'edc_sync.apps.AppConfig',
    'edc_base_test.apps.AppConfig',
    'edc_registration.apps.AppConfig',
    'edc_visit_schedule.apps.AppConfig',
    'edc_identifier.apps.AppConfig',
    'edc_call_manager.apps.AppConfig',
    'household.apps.AppConfig',
    'member.apps.AppConfig',
    'member_clone.apps.AppConfig',
    'plot.apps.AppConfig',
    'enumeration.apps.AppConfig',
    'bcpp_community.apps.AppConfig',
    'bcpp_referral.apps.AppConfig',
    'bcpp_metadata_rules.apps.AppConfig',
    'bcpp_visit_schedule.apps.AppConfig',
    'bcpp_subject_dashboard.apps.AppConfig',
    'bcpp_status.apps.AppConfig',
    'bcpp_follow.apps.EdcAppointmentAppConfig',
    'bcpp_follow.apps.EdcVisitTrackingAppConfig',
    'bcpp_follow.apps.EdcDeviceAppConfig',
    'bcpp_follow.apps.EdcMapAppConfig',
    'bcpp_follow.apps.EdcProtocolAppConfig',
    'bcpp_consent.apps.AppConfig',
    'bcpp_subject.apps.AppConfig',
    'bcpp_follow.apps.SurveyAppConfig',
    'bcpp_follow.apps.EdcTimepointAppConfig',
    'bcpp_follow.apps.AppConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bcpp_follow.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bcpp_follow.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
KEY_PATH = os.path.join(BASE_DIR, 'crypto_fields')
GIT_DIR = BASE_DIR
STATIC_ROOT = os.path.join(BASE_DIR, APP_NAME, 'static')
MEDIA_ROOT = str(PurePath(BASE_DIR).parent)
MEDIA_URL = '/media/'
CURRENT_MAP_AREA = 'test_community'
SURVEY_GROUP_NAME = 'bcpp-survey'
SURVEY_SCHEDULE_NAME = 'bcpp-year-3'
ANONYMOUS_SURVEY = 'ano'
ANONYMOUS_CONSENT_GROUP = 'anonymous'
ANONYMOUS_ENABLED = True

if 'test' in sys.argv:

    class DisableMigrations:

        def __contains__(self, item):
            return True

        def __getitem__(self, item):
            return None

    MIGRATION_MODULES = DisableMigrations()
    PASSWORD_HASHERS = ('django.contrib.auth.hashers.MD5PasswordHasher',)
    DEFAULT_FILE_STORAGE = 'inmemorystorage.InMemoryStorage'
